{"version":3,"file":"static/js/3501.44f2c33e.chunk.js","mappings":"6OAIA,MAAMA,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAqB,MAASE,MAAO,QAM3C,SAASC,IACtB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,IAC1BC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,IACjCG,EAAUL,GAA2B,IAAnBG,EAAQG,OA6BhC,OA3BAC,EAAAA,EAAAA,YAAU,KACR,IAAIC,GAAS,EAEb,GAAKH,EAeL,MAbA,WAEE,MAAMI,QAAiBC,EAAAA,EAAMC,IAC3B,qEAjBR,WAA2B,IAAZC,EAAKC,UAAAP,OAAA,QAAAQ,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACrB,OAAO,IAAIE,SAASC,GAAYC,WAAWD,EAASJ,IACtD,CAiBYM,CAAM,KACZ,MAAMC,QAAkBV,EAASW,OAE7BZ,GACFJ,EAAWiB,OAAOC,KAAKH,GAAWI,KAAKC,GAAQL,EAAUK,GAAKC,KAAK,KAEtE,EAXD,GAaO,KACLjB,GAAS,CAAK,CACf,GACA,CAACH,KAEJE,EAAAA,EAAAA,YAAU,KACHP,GAAMI,EAAW,GAAG,GACxB,CAACJ,KAGF0B,EAAAA,EAAAA,KAAC/B,EAAY,CACXK,KAAMA,EACNG,QAASA,EACTE,QAASA,EACTsB,GAAG,oBACHC,OAAQA,IAAM3B,GAAQ,GACtB4B,QAASA,IAAM5B,GAAQ,GACvB6B,eAAiBC,GAAWA,EAAOC,KACnCC,YAAcC,IACZR,EAAAA,EAAAA,KAACS,EAAAA,EAAS,IACJD,EACJE,WAAS,EACTC,QAAQ,WACRC,MAAM,eACNC,WAAY,IACPL,EAAOK,WACVC,cACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,CACNtC,GAAUqB,EAAAA,EAAAA,KAACkB,EAAAA,EAAgB,CAACC,MAAM,UAAUC,KAAM,KAAS,KAC3DZ,EAAOK,WAAWC,oBAQnC,C,eClEA,MAAM7C,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAqB,MAASE,MAAO,IAAKiD,aAAc,WAEvEC,EAAc,CAClB,CAAEV,MAAO,eACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,WACT,CAAEA,MAAO,WACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,WACT,CAAEA,MAAO,UACT,CAAEA,MAAO,YACT,CAAEA,MAAO,cACT,CAAEA,MAAO,uBACT,CAAEA,MAAO,aACT,CAAEA,MAAO,WACT,CAAEA,MAAO,SACT,CAAEA,MAAO,aACT,CAAEA,MAAO,WACT,CAAEA,MAAO,cACT,CAAEA,MAAO,WACT,CAAEA,MAAO,WACT,CAAEA,MAAO,cACT,CAAEA,MAAO,YACT,CAAEA,MAAO,WACT,CAAEA,MAAO,WACT,CAAEA,MAAO,UACT,CAAEA,MAAO,SACT,CAAEA,MAAO,WACT,CAAEA,MAAO,UACT,CAAEA,MAAO,mCACT,CAAEA,MAAO,oCACT,CAAEA,MAAO,0BACT,CAAEA,MAAO,YACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,UACT,CAAEA,MAAO,kCACT,CAAEA,MAAO,sBAGLW,GAASC,EAAAA,EAAAA,KAEA,SAASC,IACtB,MAAOC,EAAOC,IAAYnD,EAAAA,EAAAA,UAAS,MAkBnC,OACEuC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,EACPjB,EAAAA,EAAAA,KAAC/B,EAAY,CACXQ,QAAS6C,EACTlB,eAAiBC,GAAWA,EAAOO,MACnCL,YAAcC,IACZR,EAAAA,EAAAA,KAACS,EAAAA,EAAS,IAAKD,EAAQI,MAAM,YAAYD,QAAQ,WAAWD,WAAS,OAIzEV,EAAAA,EAAAA,KAAC/B,EAAY,CACXyD,MAAOA,EACPjD,QAAS6C,EACTM,SA7BeC,CAACC,EAAGC,KACnBA,GAAYA,EAASC,WACvBL,EAAS,CAAEf,MAAOmB,EAASC,aAG7BL,EAASI,EAAS,EAyBdE,cAtBgBA,CAACxD,EAAS+B,KAC9B,MAAM0B,EAAWX,EAAO9C,EAAS+B,GAIjC,MAH0B,KAAtBA,EAAOwB,YACTE,EAASC,KAAK,CAAEH,WAAYxB,EAAOwB,WAAYpB,MAAM,QAADwB,OAAU5B,EAAOwB,WAAU,OAE1EE,CAAQ,EAkBX9B,eAAiBC,GAEO,kBAAXA,EAA4BA,EACnCA,EAAO2B,WAAmB3B,EAAO2B,WAC9B3B,EAAOO,MAEhByB,aAAehC,GAAWA,EAAOO,MACjC0B,MAAO,CAAElE,MAAO,KAChBmE,UAAQ,EACRhC,YAAcC,IACZR,EAAAA,EAAAA,KAACS,EAAAA,EAAS,IAAKD,EAAQI,MAAM,2BAA2BD,QAAQ,WAAWD,WAAS,OAIxFV,EAAAA,EAAAA,KAAC/B,EAAY,CACXQ,QAAS6C,EACTlB,eAAiBC,GAAWA,EAAOO,MACnC4B,kBAAoBnC,GAAWA,IAAWiB,EAAY,IAAMjB,IAAWiB,EAAY,GACnFf,YAAcC,IACZR,EAAAA,EAAAA,KAACS,EAAAA,EAAS,IAAKD,EAAQI,MAAM,kBAAkBD,QAAQ,WAAWD,WAAS,QAKrF,C,0BCrGe,SAAS+B,IACtB,MAAMC,GAAQC,EAAAA,EAAAA,KAEd,OACE5B,EAAAA,EAAAA,MAAC6B,EAAAA,EAAG,CAACC,GAAI,CAAEzE,MAAO,IAAK,YAAa,CAAE0E,UAAWJ,EAAMK,QAAQ,KAAO9B,SAAA,EACpEjB,EAAAA,EAAAA,KAAC7B,EAAAA,EAAY,CACX6E,UAAQ,EACR/C,GAAG,gBACHxB,QAASwE,EACT7C,eAAiBC,GAAWA,EAAO6C,MACnCC,aAAc,CAACF,EAAY,KAC3B1C,YAAcC,IACZR,EAAAA,EAAAA,KAACS,EAAAA,EAAS,IACJD,EACJE,WAAS,EACTC,QAAQ,WACRC,MAAM,kBACNwC,YAAY,iBAIlBpD,EAAAA,EAAAA,KAAC7B,EAAAA,EAAY,CACX6E,UAAQ,EACR/C,GAAG,gBACHxB,QAASwE,EACT7C,eAAiBC,GAAWA,EAAO6C,MACnCC,aAAc,CAACF,EAAY,KAC3BI,uBAAqB,EACrB9C,YAAcC,IACZR,EAAAA,EAAAA,KAACS,EAAAA,EAAS,IACJD,EACJE,WAAS,EACTC,QAAQ,WACRC,MAAM,wBACNwC,YAAY,iBAIlBpD,EAAAA,EAAAA,KAAC7B,EAAAA,EAAY,CACX6E,UAAQ,EACR/C,GAAG,cACHxB,QAASwE,EAAYpD,KAAKQ,GAAWA,EAAO6C,QAC5CC,aAAc,CAACF,EAAY,IAAIC,OAC/BX,UAAQ,EACRe,WAAYA,CAAC5B,EAAO6B,IAClB7B,EAAM7B,KAAI,CAACQ,EAAQmD,KACjBxD,EAAAA,EAAAA,KAACyD,EAAAA,EAAI,CAAC9C,QAAQ,WAAWC,MAAOP,KAAYkD,EAAY,CAAEC,cAG9DjD,YAAcC,IACZR,EAAAA,EAAAA,KAACS,EAAAA,EAAS,IACJD,EACJE,WAAS,EACTC,QAAQ,SACRC,MAAM,WACNwC,YAAY,kBAMxB,CAGA,MAAMH,EAAc,CAClB,CAAEC,MAAO,2BAA4BQ,KAAM,MAC3C,CAAER,MAAO,gBAAiBQ,KAAM,MAChC,CAAER,MAAO,yBAA0BQ,KAAM,MACzC,CAAER,MAAO,kBAAmBQ,KAAM,MAClC,CAAER,MAAO,eAAgBQ,KAAM,MAC/B,CAAER,MAAO,mBAAoBQ,KAAM,MACnC,CAAER,MAAO,eAAgBQ,KAAM,MAC/B,CAAER,MAAO,gDAAiDQ,KAAM,MAChE,CAAER,MAAO,iCAAkCQ,KAAM,MACjD,CAAER,MAAO,aAAcQ,KAAM,MAC7B,CAAER,MAAO,oDAAqDQ,KAAM,MACpE,CAAER,MAAO,iDAAkDQ,KAAM,MACjE,CAAER,MAAO,eAAgBQ,KAAM,MAC/B,CAAER,MAAO,YAAaQ,KAAM,MAC5B,CAAER,MAAO,wCAAyCQ,KAAM,MACxD,CAAER,MAAO,kCAAmCQ,KAAM,MAClD,CAAER,MAAO,aAAcQ,KAAM,MAC7B,CAAER,MAAO,aAAcQ,KAAM,MAC7B,CAAER,MAAO,gBAAiBQ,KAAM,MAChC,CAAER,MAAO,qCAAsCQ,KAAM,MACrD,CAAER,MAAO,cAAeQ,KAAM,MAC9B,CAAER,MAAO,QAASQ,KAAM,MACxB,CAAER,MAAO,2BAA4BQ,KAAM,MAC3C,CAAER,MAAO,wBAAyBQ,KAAM,MACxC,CAAER,MAAO,oBAAqBQ,KAAM,MACpC,CAAER,MAAO,qBAAsBQ,KAAM,MACrC,CAAER,MAAO,4BAA0BQ,KAAM,MACzC,CAAER,MAAO,gBAAiBQ,KAAM,MAChC,CAAER,MAAO,sBAAuBQ,KAAM,MACtC,CAAER,MAAO,+BAAgCQ,KAAM,MAC/C,CAAER,MAAO,qBAAsBQ,KAAM,MACrC,CAAER,MAAO,eAAgBQ,KAAM,MAC/B,CAAER,MAAO,aAAcQ,KAAM,MAC7B,CAAER,MAAO,cAAeQ,KAAM,MAC9B,CAAER,MAAO,SAAUQ,KAAM,MACzB,CAAER,MAAO,iBAAkBQ,KAAM,MACjC,CAAER,MAAO,mBAAoBQ,KAAM,MACnC,CAAER,MAAO,eAAgBQ,KAAM,MAC/B,CAAER,MAAO,0BAA2BQ,KAAM,MAC1C,CAAER,MAAO,cAAeQ,KAAM,MAC9B,CAAER,MAAO,cAAeQ,KAAM,MAC9B,CAAER,MAAO,eAAgBQ,KAAM,MAC/B,CAAER,MAAO,6BAA8BQ,KAAM,MAC7C,CAAER,MAAO,qBAAsBQ,KAAM,MACrC,CAAER,MAAO,WAAYQ,KAAM,MAC3B,CAAER,MAAO,YAAaQ,KAAM,KAC5B,CAAER,MAAO,UAAWQ,KAAM,KAC1B,CAAER,MAAO,eAAgBQ,KAAM,MAC/B,CAAER,MAAO,gBAAiBQ,KAAM,MAChC,CAAER,MAAO,iBAAkBQ,KAAM,MACjC,CAAER,MAAO,QAASQ,KAAM,MACxB,CAAER,MAAO,mBAAoBQ,KAAM,MACnC,CACER,MAAO,uEACPQ,KAAM,MAER,CAAER,MAAO,qBAAsBQ,KAAM,MACrC,CAAER,MAAO,kBAAmBQ,KAAM,MAClC,CAAER,MAAO,sBAAuBQ,KAAM,MACtC,CAAER,MAAO,yBAA0BQ,KAAM,MACzC,CAAER,MAAO,iBAAkBQ,KAAM,MACjC,CAAER,MAAO,mBAAoBQ,KAAM,MACnC,CAAER,MAAO,cAAeQ,KAAM,MAC9B,CAAER,MAAO,YAAUQ,KAAM,MACzB,CAAER,MAAO,kBAAmBQ,KAAM,MAClC,CAAER,MAAO,wBAAyBQ,KAAM,MACxC,CAAER,MAAO,oBAAqBQ,KAAM,MACpC,CAAER,MAAO,SAAUQ,KAAM,MACzB,CAAER,MAAO,SAAUQ,KAAM,MACzB,CAAER,MAAO,8BAA+BQ,KAAM,MAC9C,CAAER,MAAO,8BAA+BQ,KAAM,MAC9C,CAAER,MAAO,WAAYQ,KAAM,MAC3B,CAAER,MAAO,eAAgBQ,KAAM,MAC/B,CAAER,MAAO,qBAAsBQ,KAAM,MACrC,CAAER,MAAO,UAAWQ,KAAM,MAC1B,CAAER,MAAO,6CAA8CQ,KAAM,MAC7D,CAAER,MAAO,iBAAkBQ,KAAM,MACjC,CAAER,MAAO,aAAcQ,KAAM,MAC7B,CAAER,MAAO,IAAKQ,KAAM,MACpB,CAAER,MAAO,sBAAuBQ,KAAM,KACtC,CAAER,MAAO,YAAUQ,KAAM,MACzB,CAAER,MAAO,qBAAsBQ,KAAM,MACrC,CAAER,MAAO,sBAAuBQ,KAAM,MACtC,CAAER,MAAO,cAAeQ,KAAM,MAC9B,CAAER,MAAO,qBAAsBQ,KAAM,MACrC,CAAER,MAAO,mBAAoBQ,KAAM,MACnC,CAAER,MAAO,wCAAyCQ,KAAM,MACxD,CAAER,MAAO,UAAWQ,KAAM,MAC1B,CAAER,MAAO,wBAAyBQ,KAAM,MACxC,CAAER,MAAO,cAAeQ,KAAM,MAC9B,CAAER,MAAO,QAASQ,KAAM,MACxB,CAAER,MAAO,oBAAqBQ,KAAM,MACpC,CAAER,MAAO,SAAUQ,KAAM,MACzB,CAAER,MAAO,YAAaQ,KAAM,MAC5B,CAAER,MAAO,wBAAyBQ,KAAM,MACxC,CAAER,MAAO,sBAAuBQ,KAAM,MACtC,CAAER,MAAO,YAAaQ,KAAM,MAC5B,CAAER,MAAO,kBAAmBQ,KAAM,MAClC,CAAER,MAAO,UAAWQ,KAAM,MAC1B,CAAER,MAAO,uBAAwBQ,KAAM,MACvC,CAAER,MAAO,SAAUQ,KAAM,KACzB,CAAER,MAAO,WAAYQ,KAAM,MAC3B,CAAER,MAAO,kCAAmCQ,KAAM,OCnK9CC,GAAYzF,EAAAA,EAAAA,IAAO,MAAPA,EAAc0F,IAAA,IAAC,MAAElB,GAAOkB,EAAA,MAAM,CAC9CC,OAAQ,OACR,CAACnB,EAAMoB,YAAYC,KAAK,OAAQ,CAAEF,OAAQ,QAC1C,gBAAiB,CACfxC,aAAc,OACd,CAACqB,EAAMoB,YAAYC,KAAK,OAAQ,CAAE1C,aAAc,SAEnD,IAEc,SAAS2C,IACtB,OACEjD,EAAAA,EAAAA,MAAC4C,EAAS,CAAA1C,SAAA,EACRjB,EAAAA,EAAAA,KAAC4C,EAAAA,EAAG,CAACqB,UAAU,aAAYhD,UACzBjB,EAAAA,EAAAA,KAACkE,EAAAA,GAAU,CACTC,cAAe,CAAC,CAAE7D,KAAM,WAAY8D,KAAM,aAAe,CAAE9D,KAAM,sBAIrEN,EAAAA,EAAAA,KAACqE,EAAAA,GAAU,CAACnB,MAAM,qBAAoBjC,UACpCjB,EAAAA,EAAAA,KAACyB,EAAiB,OAGpBzB,EAAAA,EAAAA,KAAC4C,EAAAA,EAAG,CAAC0B,GAAG,UAERtE,EAAAA,EAAAA,KAACqE,EAAAA,GAAU,CAACnB,MAAM,2BAA0BjC,UAC1CjB,EAAAA,EAAAA,KAAC3B,EAAiB,OAGpB2B,EAAAA,EAAAA,KAAC4C,EAAAA,EAAG,CAAC0B,GAAG,UAERtE,EAAAA,EAAAA,KAACqE,EAAAA,GAAU,CAACnB,MAAM,2BAA0BjC,UAC1CjB,EAAAA,EAAAA,KAACyC,EAAiB,QAI1B,C","sources":["app/views/material-kit/auto-complete/AsyncAutocomplete.jsx","app/views/material-kit/auto-complete/AutocompleteCombo.jsx","app/views/material-kit/auto-complete/BadgeAutocomplete.jsx","app/views/material-kit/auto-complete/AppAutoComplete.jsx"],"sourcesContent":["import { useState, useEffect, Fragment } from \"react\";\nimport { Autocomplete, CircularProgress, styled, TextField } from \"@mui/material\";\nimport axios from \"axios\";\n\nconst AutoComplete = styled(Autocomplete)(() => ({ width: 300 }));\n\nfunction sleep(delay = 0) {\n  return new Promise((resolve) => setTimeout(resolve, delay));\n}\n\nexport default function AsyncAutocomplete() {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const loading = open && options.length === 0;\n\n  useEffect(() => {\n    let active = true;\n\n    if (!loading) return;\n\n    (async () => {\n      // *https://www.registers.service.gov.uk/registers/country/use-the-api*\n      const response = await axios.get(\n        \"https://country.register.gov.uk/records.json?page-size=5000\"\n      );\n      await sleep(3000); // For demo purposes.\n      const countries = await response.json();\n\n      if (active) {\n        setOptions(Object.keys(countries).map((key) => countries[key].item[0]));\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  useEffect(() => {\n    if (!open) setOptions([]);\n  }, [open]);\n\n  return (\n    <AutoComplete\n      open={open}\n      options={options}\n      loading={loading}\n      id=\"asynchronous-demo\"\n      onOpen={() => setOpen(true)}\n      onClose={() => setOpen(false)}\n      getOptionLabel={(option) => option.name}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          fullWidth\n          variant=\"outlined\"\n          label=\"Asynchronous\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </Fragment>\n            )\n          }}\n        />\n      )}\n    />\n  );\n}\n","import { Fragment, useState } from \"react\";\nimport { Autocomplete, styled, TextField } from \"@mui/material\";\nimport { createFilterOptions } from \"@mui/material/Autocomplete\";\n\nconst AutoComplete = styled(Autocomplete)(() => ({ width: 300, marginBottom: \"16px\" }));\n\nconst suggestions = [\n  { label: \"Afghanistan\" },\n  { label: \"Aland Islands\" },\n  { label: \"Albania\" },\n  { label: \"Algeria\" },\n  { label: \"American Samoa\" },\n  { label: \"Andorra\" },\n  { label: \"Angola\" },\n  { label: \"Anguilla\" },\n  { label: \"Antarctica\" },\n  { label: \"Antigua and Barbuda\" },\n  { label: \"Argentina\" },\n  { label: \"Armenia\" },\n  { label: \"Aruba\" },\n  { label: \"Australia\" },\n  { label: \"Austria\" },\n  { label: \"Azerbaijan\" },\n  { label: \"Bahamas\" },\n  { label: \"Bahrain\" },\n  { label: \"Bangladesh\" },\n  { label: \"Barbados\" },\n  { label: \"Belarus\" },\n  { label: \"Belgium\" },\n  { label: \"Belize\" },\n  { label: \"Benin\" },\n  { label: \"Bermuda\" },\n  { label: \"Bhutan\" },\n  { label: \"Bolivia, Plurinational State of\" },\n  { label: \"Bonaire, Sint Eustatius and Saba\" },\n  { label: \"Bosnia and Herzegovina\" },\n  { label: \"Botswana\" },\n  { label: \"Bouvet Island\" },\n  { label: \"Brazil\" },\n  { label: \"British Indian Ocean Territory\" },\n  { label: \"Brunei Darussalam\" }\n];\n\nconst filter = createFilterOptions();\n\nexport default function AutocompleteCombo() {\n  const [value, setValue] = useState(null);\n\n  const handleChange = (_, newValue) => {\n    if (newValue && newValue.inputValue) {\n      setValue({ label: newValue.inputValue });\n      return;\n    }\n    setValue(newValue);\n  };\n\n  const filterOptions = (options, params) => {\n    const filtered = filter(options, params);\n    if (params.inputValue !== \"\") {\n      filtered.push({ inputValue: params.inputValue, label: `Add \"${params.inputValue}\"` });\n    }\n    return filtered;\n  };\n\n  return (\n    <Fragment>\n      <AutoComplete\n        options={suggestions}\n        getOptionLabel={(option) => option.label}\n        renderInput={(params) => (\n          <TextField {...params} label=\"Combo box\" variant=\"outlined\" fullWidth />\n        )}\n      />\n\n      <AutoComplete\n        value={value}\n        options={suggestions}\n        onChange={handleChange}\n        filterOptions={filterOptions}\n        getOptionLabel={(option) => {\n          // e.g value selected with enter, right from the input\n          if (typeof option === \"string\") return option;\n          if (option.inputValue) return option.inputValue;\n          return option.label;\n        }}\n        renderOption={(option) => option.label}\n        style={{ width: 300 }}\n        freeSolo\n        renderInput={(params) => (\n          <TextField {...params} label=\"Free solo with text demo\" variant=\"outlined\" fullWidth />\n        )}\n      />\n\n      <AutoComplete\n        options={suggestions}\n        getOptionLabel={(option) => option.label}\n        getOptionDisabled={(option) => option === suggestions[0] || option === suggestions[2]}\n        renderInput={(params) => (\n          <TextField {...params} label=\"Disabled option\" variant=\"outlined\" fullWidth />\n        )}\n      />\n    </Fragment>\n  );\n}\n","import { Autocomplete, Chip, TextField, Box, useTheme } from \"@mui/material\";\n\nexport default function BadgeAutocomplete() {\n  const theme = useTheme();\n\n  return (\n    <Box sx={{ width: 500, \"& > * + *\": { marginTop: theme.spacing(3) } }}>\n      <Autocomplete\n        multiple\n        id=\"tags-standard\"\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13]]}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            fullWidth\n            variant=\"standard\"\n            label=\"Multiple values\"\n            placeholder=\"Favorites\"\n          />\n        )}\n      />\n      <Autocomplete\n        multiple\n        id=\"tags-outlined\"\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13]]}\n        filterSelectedOptions\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            fullWidth\n            variant=\"outlined\"\n            label=\"filterSelectedOptions\"\n            placeholder=\"Favorites\"\n          />\n        )}\n      />\n      <Autocomplete\n        multiple\n        id=\"tags-filled\"\n        options={top100Films.map((option) => option.title)}\n        defaultValue={[top100Films[13].title]}\n        freeSolo\n        renderTags={(value, getTagProps) =>\n          value.map((option, index) => (\n            <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n          ))\n        }\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            fullWidth\n            variant=\"filled\"\n            label=\"freeSolo\"\n            placeholder=\"Favorites\"\n          />\n        )}\n      />\n    </Box>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: \"The Shawshank Redemption\", year: 1994 },\n  { title: \"The Godfather\", year: 1972 },\n  { title: \"The Godfather: Part II\", year: 1974 },\n  { title: \"The Dark Knight\", year: 2008 },\n  { title: \"12 Angry Men\", year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: \"Pulp Fiction\", year: 1994 },\n  { title: \"The Lord of the Rings: The Return of the King\", year: 2003 },\n  { title: \"The Good, the Bad and the Ugly\", year: 1966 },\n  { title: \"Fight Club\", year: 1999 },\n  { title: \"The Lord of the Rings: The Fellowship of the Ring\", year: 2001 },\n  { title: \"Star Wars: Episode V - The Empire Strikes Back\", year: 1980 },\n  { title: \"Forrest Gump\", year: 1994 },\n  { title: \"Inception\", year: 2010 },\n  { title: \"The Lord of the Rings: The Two Towers\", year: 2002 },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: \"Goodfellas\", year: 1990 },\n  { title: \"The Matrix\", year: 1999 },\n  { title: \"Seven Samurai\", year: 1954 },\n  { title: \"Star Wars: Episode IV - A New Hope\", year: 1977 },\n  { title: \"City of God\", year: 2002 },\n  { title: \"Se7en\", year: 1995 },\n  { title: \"The Silence of the Lambs\", year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: \"Life Is Beautiful\", year: 1997 },\n  { title: \"The Usual Suspects\", year: 1995 },\n  { title: \"Léon: The Professional\", year: 1994 },\n  { title: \"Spirited Away\", year: 2001 },\n  { title: \"Saving Private Ryan\", year: 1998 },\n  { title: \"Once Upon a Time in the West\", year: 1968 },\n  { title: \"American History X\", year: 1998 },\n  { title: \"Interstellar\", year: 2014 },\n  { title: \"Casablanca\", year: 1942 },\n  { title: \"City Lights\", year: 1931 },\n  { title: \"Psycho\", year: 1960 },\n  { title: \"The Green Mile\", year: 1999 },\n  { title: \"The Intouchables\", year: 2011 },\n  { title: \"Modern Times\", year: 1936 },\n  { title: \"Raiders of the Lost Ark\", year: 1981 },\n  { title: \"Rear Window\", year: 1954 },\n  { title: \"The Pianist\", year: 2002 },\n  { title: \"The Departed\", year: 2006 },\n  { title: \"Terminator 2: Judgment Day\", year: 1991 },\n  { title: \"Back to the Future\", year: 1985 },\n  { title: \"Whiplash\", year: 2014 },\n  { title: \"Gladiator\", year: 2000 },\n  { title: \"Memento\", year: 2000 },\n  { title: \"The Prestige\", year: 2006 },\n  { title: \"The Lion King\", year: 1994 },\n  { title: \"Apocalypse Now\", year: 1979 },\n  { title: \"Alien\", year: 1979 },\n  { title: \"Sunset Boulevard\", year: 1950 },\n  {\n    title: \"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",\n    year: 1964\n  },\n  { title: \"The Great Dictator\", year: 1940 },\n  { title: \"Cinema Paradiso\", year: 1988 },\n  { title: \"The Lives of Others\", year: 2006 },\n  { title: \"Grave of the Fireflies\", year: 1988 },\n  { title: \"Paths of Glory\", year: 1957 },\n  { title: \"Django Unchained\", year: 2012 },\n  { title: \"The Shining\", year: 1980 },\n  { title: \"WALL·E\", year: 2008 },\n  { title: \"American Beauty\", year: 1999 },\n  { title: \"The Dark Knight Rises\", year: 2012 },\n  { title: \"Princess Mononoke\", year: 1997 },\n  { title: \"Aliens\", year: 1986 },\n  { title: \"Oldboy\", year: 2003 },\n  { title: \"Once Upon a Time in America\", year: 1984 },\n  { title: \"Witness for the Prosecution\", year: 1957 },\n  { title: \"Das Boot\", year: 1981 },\n  { title: \"Citizen Kane\", year: 1941 },\n  { title: \"North by Northwest\", year: 1959 },\n  { title: \"Vertigo\", year: 1958 },\n  { title: \"Star Wars: Episode VI - Return of the Jedi\", year: 1983 },\n  { title: \"Reservoir Dogs\", year: 1992 },\n  { title: \"Braveheart\", year: 1995 },\n  { title: \"M\", year: 1931 },\n  { title: \"Requiem for a Dream\", year: 2000 },\n  { title: \"Amélie\", year: 2001 },\n  { title: \"A Clockwork Orange\", year: 1971 },\n  { title: \"Like Stars on Earth\", year: 2007 },\n  { title: \"Taxi Driver\", year: 1976 },\n  { title: \"Lawrence of Arabia\", year: 1962 },\n  { title: \"Double Indemnity\", year: 1944 },\n  { title: \"Eternal Sunshine of the Spotless Mind\", year: 2004 },\n  { title: \"Amadeus\", year: 1984 },\n  { title: \"To Kill a Mockingbird\", year: 1962 },\n  { title: \"Toy Story 3\", year: 2010 },\n  { title: \"Logan\", year: 2017 },\n  { title: \"Full Metal Jacket\", year: 1987 },\n  { title: \"Dangal\", year: 2016 },\n  { title: \"The Sting\", year: 1973 },\n  { title: \"2001: A Space Odyssey\", year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: \"Toy Story\", year: 1995 },\n  { title: \"Bicycle Thieves\", year: 1948 },\n  { title: \"The Kid\", year: 1921 },\n  { title: \"Inglourious Basterds\", year: 2009 },\n  { title: \"Snatch\", year: 2000 },\n  { title: \"3 Idiots\", year: 2009 },\n  { title: \"Monty Python and the Holy Grail\", year: 1975 }\n];\n","import { Box, styled } from \"@mui/material\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport AsyncAutocomplete from \"./AsyncAutocomplete\";\nimport AutocompleteCombo from \"./AutocompleteCombo\";\nimport BadgeAutocomplete from \"./BadgeAutocomplete\";\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" }\n  }\n}));\n\nexport default function AppAutoComplete() {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"Autocomplete\" }]}\n        />\n      </Box>\n\n      <SimpleCard title=\"autocomplete combo\">\n        <AutocompleteCombo />\n      </SimpleCard>\n\n      <Box py=\"12px\" />\n\n      <SimpleCard title=\"Asyncronous Autocomplete\">\n        <AsyncAutocomplete />\n      </SimpleCard>\n\n      <Box py=\"12px\" />\n\n      <SimpleCard title=\"Asyncronous Autocomplete\">\n        <BadgeAutocomplete />\n      </SimpleCard>\n    </Container>\n  );\n}\n"],"names":["AutoComplete","styled","Autocomplete","width","AsyncAutocomplete","open","setOpen","useState","options","setOptions","loading","length","useEffect","active","response","axios","get","delay","arguments","undefined","Promise","resolve","setTimeout","sleep","countries","json","Object","keys","map","key","item","_jsx","id","onOpen","onClose","getOptionLabel","option","name","renderInput","params","TextField","fullWidth","variant","label","InputProps","endAdornment","_jsxs","Fragment","children","CircularProgress","color","size","marginBottom","suggestions","filter","createFilterOptions","AutocompleteCombo","value","setValue","onChange","handleChange","_","newValue","inputValue","filterOptions","filtered","push","concat","renderOption","style","freeSolo","getOptionDisabled","BadgeAutocomplete","theme","useTheme","Box","sx","marginTop","spacing","multiple","top100Films","title","defaultValue","placeholder","filterSelectedOptions","renderTags","getTagProps","index","Chip","year","Container","_ref","margin","breakpoints","down","AppAutoComplete","className","Breadcrumb","routeSegments","path","SimpleCard","py"],"sourceRoot":""}