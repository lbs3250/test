{"version":3,"file":"static/js/2679.736035c1.chunk.js","mappings":"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","sources":["app/views/sessions/JwtLogin.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { Card, Checkbox, Grid, TextField, Box, styled, useTheme } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport useAuth from \"app/hooks/useAuth\";\nimport { Paragraph } from \"app/components/Typography\";\n\n// STYLED COMPONENTS\nconst FlexBox = styled(Box)(() => ({\n  display: \"flex\"\n}));\n\nconst ContentBox = styled(\"div\")(() => ({\n  height: \"100%\",\n  padding: \"32px\",\n  position: \"relative\",\n  background: \"rgba(0, 0, 0, 0.01)\"\n}));\n\nconst StyledRoot = styled(\"div\")(() => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  backgroundColor: \"#1A2038\",\n  minHeight: \"100% !important\",\n  \"& .card\": {\n    maxWidth: 800,\n    minHeight: 400,\n    margin: \"1rem\",\n    display: \"flex\",\n    borderRadius: 12,\n    alignItems: \"center\"\n  },\n\n  \".img-wrapper\": {\n    height: \"100%\",\n    minWidth: 320,\n    display: \"flex\",\n    padding: \"2rem\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n}));\n\n// initial login credentials\nconst initialValues = {\n  email: \"jason@ui-lib.com\",\n  password: \"dummyPass\",\n  remember: true\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(6, \"Password must be 6 character length\")\n    .required(\"Password is required!\"),\n  email: Yup.string().email(\"Invalid Email address\").required(\"Email is required!\")\n});\n\nexport default function JwtLogin() {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n\n  const { login } = useAuth();\n\n  const handleFormSubmit = async (values) => {\n    setLoading(true);\n    try {\n      await login(values.email, values.password);\n      navigate(\"/\");\n    } catch (e) {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <StyledRoot>\n      <Card className=\"card\">\n        <Grid container>\n          <Grid item sm={6} xs={12}>\n            <div className=\"img-wrapper\">\n              <img src=\"/assets/images/illustrations/dreamer.svg\" width=\"100%\" alt=\"\" />\n            </div>\n          </Grid>\n\n          <Grid item sm={6} xs={12}>\n            <ContentBox>\n              <Formik\n                onSubmit={handleFormSubmit}\n                initialValues={initialValues}\n                validationSchema={validationSchema}>\n                {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n                  <form onSubmit={handleSubmit}>\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      type=\"email\"\n                      name=\"email\"\n                      label=\"Email\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.email}\n                      onChange={handleChange}\n                      helperText={touched.email && errors.email}\n                      error={Boolean(errors.email && touched.email)}\n                      sx={{ mb: 3 }}\n                    />\n\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      name=\"password\"\n                      type=\"password\"\n                      label=\"Password\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.password}\n                      onChange={handleChange}\n                      helperText={touched.password && errors.password}\n                      error={Boolean(errors.password && touched.password)}\n                      sx={{ mb: 1.5 }}\n                    />\n\n                    <FlexBox justifyContent=\"space-between\">\n                      <FlexBox gap={1}>\n                        <Checkbox\n                          size=\"small\"\n                          name=\"remember\"\n                          onChange={handleChange}\n                          checked={values.remember}\n                          sx={{ padding: 0 }}\n                        />\n\n                        <Paragraph>Remember Me</Paragraph>\n                      </FlexBox>\n\n                      <NavLink\n                        to=\"/session/forgot-password\"\n                        style={{ color: theme.palette.primary.main }}>\n                        Forgot password?\n                      </NavLink>\n                    </FlexBox>\n\n                    <LoadingButton\n                      type=\"submit\"\n                      color=\"primary\"\n                      loading={loading}\n                      variant=\"contained\"\n                      sx={{ my: 2 }}>\n                      Login\n                    </LoadingButton>\n\n                    <Paragraph>\n                      Don't have an account?\n                      <NavLink\n                        to=\"/session/signup\"\n                        style={{ color: theme.palette.primary.main, marginLeft: 5 }}>\n                        Register\n                      </NavLink>\n                    </Paragraph>\n                  </form>\n                )}\n              </Formik>\n            </ContentBox>\n          </Grid>\n        </Grid>\n      </Card>\n    </StyledRoot>\n  );\n}\n"],"names":["FlexBox","styled","Box","display","ContentBox","height","padding","position","background","StyledRoot","alignItems","justifyContent","backgroundColor","minHeight","maxWidth","margin","borderRadius","minWidth","initialValues","email","password","remember","validationSchema","Yup","shape","min","required","JwtLogin","theme","useTheme","navigate","useNavigate","loading","setLoading","useState","login","useAuth","_jsx","children","Card","className","_jsxs","Grid","container","item","sm","xs","src","width","alt","Formik","onSubmit","async","values","e","_ref","errors","touched","handleChange","handleBlur","handleSubmit","TextField","fullWidth","size","type","name","label","variant","onBlur","value","onChange","helperText","error","Boolean","sx","mb","gap","Checkbox","checked","Paragraph","NavLink","to","style","color","palette","primary","main","LoadingButton","my","marginLeft"],"sourceRoot":""}