{"version":3,"file":"static/js/5693.3120bb17.chunk.js","mappings":"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","sources":["app/views/sessions/JwtRegister.jsx"],"sourcesContent":["import { Formik } from \"formik\";\nimport { useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { Card, Checkbox, Grid, TextField, useTheme, Box, styled } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport * as Yup from \"yup\";\n\nimport useAuth from \"app/hooks/useAuth\";\nimport { Paragraph } from \"app/components/Typography\";\n\n// STYLED COMPONENTS\nconst FlexBox = styled(Box)(() => ({\n  display: \"flex\",\n  alignItems: \"center\"\n}));\n\nconst JustifyBox = styled(FlexBox)(() => ({\n  justifyContent: \"center\"\n}));\n\nconst ContentBox = styled(JustifyBox)(() => ({\n  height: \"100%\",\n  padding: \"32px\",\n  background: \"rgba(0, 0, 0, 0.01)\"\n}));\n\nconst JWTRegister = styled(JustifyBox)(() => ({\n  background: \"#1A2038\",\n  minHeight: \"100vh !important\",\n  \"& .card\": {\n    maxWidth: 800,\n    minHeight: 400,\n    margin: \"1rem\",\n    display: \"flex\",\n    borderRadius: 12,\n    alignItems: \"center\"\n  }\n}));\n\n// initial login credentials\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n  username: \"\",\n  remember: true\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(6, \"Password must be 6 character length\")\n    .required(\"Password is required!\"),\n  email: Yup.string().email(\"Invalid Email address\").required(\"Email is required!\")\n});\n\nexport default function JwtRegister() {\n  const theme = useTheme();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n\n  const handleFormSubmit = (values) => {\n    setLoading(true);\n\n    try {\n      register(values.email, values.username, values.password);\n      navigate(\"/\");\n      setLoading(false);\n    } catch (e) {\n      console.log(e);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <JWTRegister>\n      <Card className=\"card\">\n        <Grid container>\n          <Grid item sm={6} xs={12}>\n            <ContentBox>\n              <img\n                width=\"100%\"\n                alt=\"Register\"\n                src=\"/assets/images/illustrations/posting_photo.svg\"\n              />\n            </ContentBox>\n          </Grid>\n\n          <Grid item sm={6} xs={12}>\n            <Box p={4} height=\"100%\">\n              <Formik\n                onSubmit={handleFormSubmit}\n                initialValues={initialValues}\n                validationSchema={validationSchema}>\n                {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n                  <form onSubmit={handleSubmit}>\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      type=\"text\"\n                      name=\"username\"\n                      label=\"Username\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.username}\n                      onChange={handleChange}\n                      helperText={touched.username && errors.username}\n                      error={Boolean(errors.username && touched.username)}\n                      sx={{ mb: 3 }}\n                    />\n\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      type=\"email\"\n                      name=\"email\"\n                      label=\"Email\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.email}\n                      onChange={handleChange}\n                      helperText={touched.email && errors.email}\n                      error={Boolean(errors.email && touched.email)}\n                      sx={{ mb: 3 }}\n                    />\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      name=\"password\"\n                      type=\"password\"\n                      label=\"Password\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.password}\n                      onChange={handleChange}\n                      helperText={touched.password && errors.password}\n                      error={Boolean(errors.password && touched.password)}\n                      sx={{ mb: 2 }}\n                    />\n\n                    <FlexBox gap={1} alignItems=\"center\">\n                      <Checkbox\n                        size=\"small\"\n                        name=\"remember\"\n                        onChange={handleChange}\n                        checked={values.remember}\n                        sx={{ padding: 0 }}\n                      />\n\n                      <Paragraph fontSize={13}>\n                        I have read and agree to the terms of service.\n                      </Paragraph>\n                    </FlexBox>\n\n                    <LoadingButton\n                      type=\"submit\"\n                      color=\"primary\"\n                      loading={loading}\n                      variant=\"contained\"\n                      sx={{ mb: 2, mt: 3 }}>\n                      Register\n                    </LoadingButton>\n\n                    <Paragraph>\n                      Already have an account?\n                      <NavLink\n                        to=\"/session/signin\"\n                        style={{ color: theme.palette.primary.main, marginLeft: 5 }}>\n                        Login\n                      </NavLink>\n                    </Paragraph>\n                  </form>\n                )}\n              </Formik>\n            </Box>\n          </Grid>\n        </Grid>\n      </Card>\n    </JWTRegister>\n  );\n}\n"],"names":["FlexBox","styled","Box","display","alignItems","JustifyBox","justifyContent","ContentBox","height","padding","background","JWTRegister","minHeight","maxWidth","margin","borderRadius","initialValues","email","password","username","remember","validationSchema","Yup","shape","min","required","JwtRegister","theme","useTheme","register","useAuth","navigate","useNavigate","loading","setLoading","useState","_jsx","children","Card","className","_jsxs","Grid","container","item","sm","xs","width","alt","src","p","Formik","onSubmit","values","e","console","log","_ref","errors","touched","handleChange","handleBlur","handleSubmit","TextField","fullWidth","size","type","name","label","variant","onBlur","value","onChange","helperText","error","Boolean","sx","mb","gap","Checkbox","checked","Paragraph","fontSize","LoadingButton","color","mt","NavLink","to","style","palette","primary","main","marginLeft"],"sourceRoot":""}