{"version":3,"file":"static/js/8763.aa7f2c47.chunk.js","mappings":"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","sources":["app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx","app/views/material-kit/snackbar/CustomizedSnackbar.jsx","app/views/material-kit/snackbar/DirectionSnackbar.jsx","app/views/material-kit/snackbar/LongLengthSnackbar.jsx","app/views/material-kit/snackbar/PositionedSnackbar.jsx","app/views/material-kit/snackbar/SimpleSnackbar.jsx","app/views/material-kit/snackbar/StackedSnackbar.jsx","app/views/material-kit/snackbar/TransitionSnackbar.jsx","app/views/material-kit/snackbar/AppSnackbar.jsx"],"sourcesContent":["import CloseIcon from '@mui/icons-material/Close';\nimport { Box, Button, IconButton, Snackbar } from '@mui/material';\nimport { styled } from '@mui/material';\nimport { useState } from 'react';\n\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\n  padding: theme.spacing(0.5)\n}));\n\nconst ConsecutiveSnackbars = () => {\n  const [queue, setQueue] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [messageInfo, setMessageInfo] = useState({});\n\n  const handleClick = (message) => () => {\n    setQueue((state) => [...state, { message, key: new Date().getTime() }]);\n\n    if (open) {\n      // immediately begin dismissing current message\n      // to start showing new one\n      setOpen(false);\n    } else {\n      processQueue();\n    }\n  };\n\n  const processQueue = () => {\n    if (queue.length > 0) {\n      setMessageInfo(queue.shift());\n      setOpen(true);\n    }\n  };\n\n  const handleClose = (_, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const handleExited = () => processQueue();\n\n  return (\n    <Box>\n      <Button onClick={handleClick('Message A')}>Show message A</Button>\n      <Button onClick={handleClick('Message B')}>Show message B</Button>\n      <Snackbar\n        open={open}\n        key={messageInfo.key}\n        onClose={handleClose}\n        autoHideDuration={6000}\n        onExited={handleExited}\n        ContentProps={{ 'aria-describedby': 'message-id' }}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        message={<span id=\"message-id\">{messageInfo.message}</span>}\n        action={[\n          <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={handleClose}>\n            UNDO\n          </Button>,\n          <StyledIconButton key=\"close\" color=\"inherit\" aria-label=\"Close\" onClick={handleClose}>\n            <CloseIcon />\n          </StyledIconButton>\n        ]}\n      />\n    </Box>\n  );\n};\n\nexport default ConsecutiveSnackbars;\n","import { Alert, Button, Snackbar } from '@mui/material';\nimport { amber, green } from '@mui/material/colors';\nimport { styled } from '@mui/material';\nimport React from 'react';\n\nconst ContentRoot = styled('div')(({ theme }) => ({\n  '& .icon': { fontSize: 20 },\n  '& .success': { backgroundColor: green[600] },\n  '& .warning': { backgroundColor: amber[700] },\n  '& .error': { backgroundColor: theme.palette.error.main },\n  '& .info': { backgroundColor: theme.palette.primary.main },\n  '& .iconVariant': { opacity: 0.9, marginRight: theme.spacing(1) },\n  '& .message': { display: 'flex', alignItems: 'center' },\n  '& .margin': { margin: theme.spacing(1) }\n}));\n\nexport default function CustomizedSnackbars() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClick() {\n    setOpen(true);\n  }\n  function handleClose(_, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  }\n\n  return (\n    <ContentRoot>\n      <Button variant=\"outlined\" className=\"margin\" onClick={handleClick}>\n        Open success snackbar\n      </Button>\n\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }} variant=\"filled\">\n          This is a success message!\n        </Alert>\n      </Snackbar>\n\n      <Alert onClose={handleClose} sx={{ m: 1 }} severity=\"error\" variant=\"filled\">\n        This is an error message!\n      </Alert>\n\n      <Alert onClose={handleClose} sx={{ m: 1 }} severity=\"warning\" variant=\"filled\">\n        This is a warning message!\n      </Alert>\n\n      <Alert onClose={handleClose} sx={{ m: 1 }} severity=\"info\" variant=\"filled\">\n        This is an information message!\n      </Alert>\n\n      <Alert onClose={handleClose} sx={{ m: 1 }} severity=\"success\" variant=\"filled\">\n        This is a success message!\n      </Alert>\n    </ContentRoot>\n  );\n}\n","import { Box, Button, Slide, Snackbar } from \"@mui/material\";\nimport { useState } from \"react\";\n\nfunction TransitionLeft(props) {\n  return <Slide {...props} direction=\"left\" />;\n}\n\nfunction TransitionUp(props) {\n  return <Slide {...props} direction=\"up\" />;\n}\n\nfunction TransitionRight(props) {\n  return <Slide {...props} direction=\"right\" />;\n}\n\nfunction TransitionDown(props) {\n  return <Slide {...props} direction=\"down\" />;\n}\n\nconst DirectionSnackbar = () => {\n  const [open, setOpen] = useState(false);\n  const [TransitionType, setTransitionType] = useState(undefined);\n\n  const handleClick = (slideDirection) => () => {\n    setOpen(true);\n    setTransitionType(() => slideDirection);\n  };\n\n  const handleClose = () => setOpen(false);\n\n  return (\n    <Box>\n      <Button onClick={handleClick(TransitionLeft)}>Right</Button>\n      <Button onClick={handleClick(TransitionUp)}>Up</Button>\n      <Button onClick={handleClick(TransitionRight)}>Left</Button>\n      <Button onClick={handleClick(TransitionDown)}>Down</Button>\n\n      <Snackbar\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={TransitionType}\n        ContentProps={{ \"aria-describedby\": \"message-id\" }}\n        message={<span id=\"message-id\">I love snacks</span>}\n      />\n    </Box>\n  );\n};\n\nexport default DirectionSnackbar;\n","import { Button, SnackbarContent, styled } from \"@mui/material\";\n\nconst action = (\n  <Button color=\"secondary\" size=\"small\">\n    lorem ipsum dolorem\n  </Button>\n);\n\nconst SnackbarRoot = styled(\"div\")(({ theme }) => ({\n  maxWidth: 600,\n  \"& .snackbar\": { margin: theme.spacing(1) },\n}));\n\nexport default function LongTextSnackbar() {\n  return (\n    <SnackbarRoot>\n      <SnackbarContent className=\"snackbar\" message=\"I love snacks.\" action={action} />\n\n      <SnackbarContent\n        className=\"snackbar\"\n        message={`I love candy. I love cookies. I love cupcakes. \\\n          I love cheesecake. I love chocolate.`}\n      />\n\n      <SnackbarContent\n        className=\"snackbar\"\n        message=\"I love candy. I love cookies. I love cupcakes.\"\n        action={action}\n      />\n\n      <SnackbarContent\n        className=\"snackbar\"\n        message={\n          \"I love candy. I love cookies. I love cupcakes. \\\n          I love cheesecake. I love chocolate.\"\n        }\n        action={action}\n      />\n    </SnackbarRoot>\n  );\n}\n","import { Box, Button, Snackbar } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function PositionedSnackbar() {\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: \"top\",\n    horizontal: \"center\",\n  });\n\n  const { vertical, horizontal, open } = state;\n\n  const handleClick = (newState) => () => {\n    setState({ open: true, ...newState });\n  };\n\n  function handleClose() {\n    setState({ ...state, open: false });\n  }\n\n  return (\n    <Box>\n      <Button onClick={handleClick({ vertical: \"top\", horizontal: \"center\" })}>Top-Center</Button>\n      <Button onClick={handleClick({ vertical: \"top\", horizontal: \"right\" })}>Top-Right</Button>\n\n      <Button onClick={handleClick({ vertical: \"bottom\", horizontal: \"right\" })}>\n        Bottom-Right\n      </Button>\n\n      <Button onClick={handleClick({ vertical: \"bottom\", horizontal: \"center\" })}>\n        Bottom-Center\n      </Button>\n\n      <Button onClick={handleClick({ vertical: \"bottom\", horizontal: \"left\" })}>Bottom-Left</Button>\n\n      <Button onClick={handleClick({ vertical: \"top\", horizontal: \"left\" })}>Top-Left</Button>\n\n      <Snackbar\n        open={open}\n        onClose={handleClose}\n        key={`${vertical},${horizontal}`}\n        anchorOrigin={{ vertical, horizontal }}\n        ContentProps={{ \"aria-describedby\": \"message-id\" }}\n        message={<span id=\"message-id\">I love snacks</span>}\n      />\n    </Box>\n  );\n}\n","import CloseIcon from \"@mui/icons-material/Close\";\nimport { Box, Button, IconButton, Snackbar, useTheme } from \"@mui/material\";\nimport { useState } from \"react\";\n\nexport default function SimpleSnackbar() {\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  function handleClick() {\n    setOpen(true);\n  }\n\n  function handleClose(_, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  }\n\n  return (\n    <Box>\n      <Button onClick={handleClick}>Open simple snackbar</Button>\n      <Snackbar\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        ContentProps={{ \"aria-describedby\": \"message-id\" }}\n        message={<span id=\"message-id\">Note archived</span>}\n        action={[\n          <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={handleClose}>\n            UNDO\n          </Button>,\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            onClick={handleClose}\n            sx={{ padding: theme.spacing(0.5) }}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />\n    </Box>\n  );\n}\n","import { Fragment } from 'react';\nimport { Button } from '@mui/material';\nimport { SnackbarProvider, useSnackbar } from 'notistack';\n\nfunction StackedSnackbar() {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleClick = () => enqueueSnackbar('I love snacks.');\n\n  const handleClickVariant = (variant) => () => {\n    // variant could be success, error, warning, info, or default\n    enqueueSnackbar('This is a warning message!', { variant });\n  };\n\n  return (\n    <Fragment>\n      <Button onClick={handleClick}>Show snackbar</Button>\n      <Button onClick={handleClickVariant('warning')}>Show warning snackbar</Button>\n    </Fragment>\n  );\n}\n\nexport default function IntegrationNotistack() {\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <StackedSnackbar />\n    </SnackbarProvider>\n  );\n}\n","import { Button, Fade, Grow, Slide, Snackbar } from \"@mui/material\";\nimport React from \"react\";\n\nfunction SlideTransition(props) {\n  return <Slide {...props} direction=\"up\" />;\n}\n\nfunction GrowTransition(props) {\n  return <Grow {...props} />;\n}\n\nexport default function TransitionsSnackbar() {\n  const [state, setState] = React.useState({\n    open: false,\n    Transition: Fade,\n  });\n\n  const handleClick = (Transition) => () => {\n    setState({ open: true, Transition });\n  };\n\n  function handleClose() {\n    setState({ ...state, open: false });\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick(GrowTransition)}>Grow Transition</Button>\n      <Button onClick={handleClick(Fade)}>Fade Transition</Button>\n      <Button onClick={handleClick(SlideTransition)}>Slide Transition</Button>\n      <Snackbar\n        open={state.open}\n        onClose={handleClose}\n        TransitionComponent={state.Transition}\n        ContentProps={{ \"aria-describedby\": \"message-id\" }}\n        message={<span id=\"message-id\">I love snacks</span>}\n      />\n    </div>\n  );\n}\n","import { Box, Stack, styled } from \"@mui/material\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport ConsecutiveSnackbar from \"./ConsecutiveSnackbar\";\nimport CustomizedSnackbars from \"./CustomizedSnackbar\";\nimport DirectionSnackbar from \"./DirectionSnackbar\";\nimport LongTextSnackbar from \"./LongLengthSnackbar\";\nimport PositionedSnackbar from \"./PositionedSnackbar\";\nimport SimpleSnackbar from \"./SimpleSnackbar\";\nimport IntegrationNotistack from \"./StackedSnackbar\";\nimport TransitionsSnackbar from \"./TransitionSnackbar\";\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst AppSnackbar = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"Snackbar\" }]}\n        />\n      </Box>\n\n      <Stack spacing={3}>\n        <SimpleCard title=\"simple snackbar\">\n          <SimpleSnackbar />\n        </SimpleCard>\n\n        <SimpleCard title=\"customized snackbar\">\n          <CustomizedSnackbars />\n        </SimpleCard>\n\n        <SimpleCard title=\"positioned snackbar\">\n          <PositionedSnackbar />\n        </SimpleCard>\n\n        <SimpleCard title=\"message length\">\n          <LongTextSnackbar />\n        </SimpleCard>\n\n        <SimpleCard title=\"transition\">\n          <TransitionsSnackbar />\n        </SimpleCard>\n\n        <SimpleCard title=\"consecutive snackbar\">\n          <ConsecutiveSnackbar />\n        </SimpleCard>\n\n        <SimpleCard title=\"Control Slide direction\">\n          <DirectionSnackbar />\n        </SimpleCard>\n\n        <SimpleCard title=\"complementary project\">\n          <IntegrationNotistack />\n        </SimpleCard>\n      </Stack>\n    </Container>\n  );\n};\n\nexport default AppSnackbar;\n"],"names":["StyledIconButton","styled","IconButton","_ref","theme","padding","spacing","ConsecutiveSnackbars","queue","setQueue","useState","open","setOpen","messageInfo","setMessageInfo","handleClick","message","state","key","Date","getTime","processQueue","length","shift","handleClose","_","reason","_jsxs","Box","children","_jsx","Button","onClick","Snackbar","onClose","autoHideDuration","onExited","handleExited","ContentProps","anchorOrigin","vertical","horizontal","id","action","color","size","CloseIcon","ContentRoot","fontSize","backgroundColor","green","amber","palette","error","main","primary","opacity","marginRight","display","alignItems","margin","CustomizedSnackbars","React","variant","className","Alert","severity","sx","width","m","TransitionLeft","props","Slide","direction","TransitionUp","TransitionRight","TransitionDown","DirectionSnackbar","TransitionType","setTransitionType","undefined","slideDirection","TransitionComponent","SnackbarRoot","maxWidth","LongTextSnackbar","SnackbarContent","PositionedSnackbar","setState","newState","concat","SimpleSnackbar","useTheme","StackedSnackbar","enqueueSnackbar","useSnackbar","Fragment","IntegrationNotistack","SnackbarProvider","maxSnack","SlideTransition","GrowTransition","Grow","TransitionsSnackbar","Transition","Fade","Container","breakpoints","down","marginBottom","AppSnackbar","Breadcrumb","routeSegments","name","path","Stack","SimpleCard","title","ConsecutiveSnackbar"],"sourceRoot":""}